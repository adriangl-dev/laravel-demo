name: Integración continua (CI)
on:
  workflow_dispatch:
    
# on:
#   push:
#     branches:
#       - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: laravel-app

    steps:
      # 1️⃣ Checkout del repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Setup PHP para tests
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: mbstring, pdo, pdo_pgsql, sqlite, tokenizer

      # 3️⃣ Instalar dependencias de PHP
      - name: Install Composer dependencies
        run: composer install --no-progress --no-interaction --optimize-autoloader

      # 4️⃣ Ejecutar tests de Laravel
      - name: Run Laravel tests
        run: php artisan test --env=testing --no-tty

      # 5️⃣ Loguearse en Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 6️⃣ Definir tag dinámico
      - name: Set Docker tags
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "VERSION_TAG=$SHORT_SHA" >> $GITHUB_ENV
          echo "IMAGE_TAGS=$SHORT_SHA,latest" >> $GITHUB_ENV

      # 7️⃣ Construir imagen con tag dinámico + latest
      - name: Build Docker image
        run: |
          docker build \
            -t $IMAGE_NAME:$VERSION_TAG \
            -t $IMAGE_NAME:latest .

      # 8️⃣ Subir ambas etiquetas al registro
      - name: Push Docker image
        run: |
          docker push $IMAGE_NAME:$VERSION_TAG
          docker push $IMAGE_NAME:latest

      # 9️⃣ Deploy con Docker Compose en el servidor remoto
      - name: Deploy to production
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /path/to/production
            # Traer la última versión de latest
            docker-compose pull
            # Levantar contenedores
            docker-compose --env-file src/.env.production up -d --remove-orphans

